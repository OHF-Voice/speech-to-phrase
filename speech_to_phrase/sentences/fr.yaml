---
language: "fr"

lists:
  color:
    - "blanc"
    - "noir"
    - "rouge"
    - "orange"
    - "jaune"
    - "vert"
    - "bleu"
    - "violet"
    - "marron"
    - "rose"

transformations:
  le:
    # If the regular expression matches...
    - match: "^[aàâäæeéèêëiîïoôöœuùûüyÿh]"
      # ...output these strings with the matching value:
      outputs:
        - "l'{value}"
        - "{value}"
    # If no matches, output these strings with the value:
    - outputs:
        - "le {value}"
        - "la {value}"
        - "les {value}"
        - "{value}"
  de_le:
    # If the regular expression matches...
    - match: "^[aàâäæeéèêëiîïoôöœuùûüyÿh]"
      # ...output these strings with the matching value:
      outputs:
        - "de l'{value}"
        - "{value}"
    # If no matches, output these strings with the value:
    - outputs:
        - "du {value}"
        - "de la {value}"
        - "des {value}"
        - "{value}"
  dans_le:
    # If the regular expression matches...
    - match: "^[aàâäæeéèêëiîïoôöœuùûüyÿh]"
      # ...output these strings with the matching value:
      outputs:
        - "dans l'{value}"
        - "{value}"
    # If no matches, output these strings with the value:
    - outputs:
        - "dans le {value}"
        - "dans la {value}"
        - "dans les {value}"
        - "{value}"

# Apply transformations to different source lists to produce new lists.
transformed_lists:
  le_name:
    source: "name"
    transformations:
      - "le"
  le_area:
    source: "area"
    transformations:
      - "le"
  le_floor:
    source: "floor"
    transformations:
      - "le"
  de_le_name:
    source: "name"
    transformations:
      - "de_le"
  de_le_area:
    source: "area"
    transformations:
      - "de_le"
  de_le_floor:
    source: "floor"
    transformations:
      - "de_le"
  dans_le_name:
    source: "name"
    transformations:
      - "dans_le"
  dans_le_area:
    source: "area"
    transformations:
      - "dans_le"
  dans_le_floor:
    source: "floor"
    transformations:
      - "dans_le"

data:
  # Nevermind
  - "oublie[s]"
  - "annuler"
  - "chut"
  - "tais toi"
  - "silence"

  # date and time
  - "quelle heure est-il"
  - "quel jour sommes-nous"

  # weather
  - "quel temps fait-il"
  - sentences:
      - "quel temps fait-il à {le_name}"
    domains:
      - "weather"

  # Turning on lights per area
  - "allume[r] [les|la] lumière[s] {de_le_area}"
  - "allume[r] [les|la] lumière[s] {dans_le_area}"
  - "allume[r] {le_area}"

  # Turning on lights per area (context awareness)
  - "allume[r] [les|la] lumière[s]"

  # Turning on lights per floor
  - "éteins|éteindre [les|la] lumière[s] {de_le_floor}"
  - "éteins|éteindre [les|la] lumière[s] {dans_le_floor}"
  - "éteins|éteindre {le_floor}"

  # Turning off lights per area
  - "éteins|éteindre [les|la] lumière[s] {de_le_area}"
  - "éteins|éteindre [les|la] lumière[s] {dans_le_area}"
  - "éteins|éteindre {le_area}"

  # Turning off lights per area (context awareness)
  - "éteins|éteindre [les|la] lumière[s]"

  # Turning off lights per floor
  - "éteins|éteindre [les|la] lumière[s] {de_le_floor}"
  - "éteins|éteindre [les|la] lumière[s] {dans_le_floor}"
  - "éteins|éteindre {le_floor}"

  # Setting brightness per area
  - "règle|régler la luminosité {de_le_area} à {brightness} pourcent"
  - "règle|régler la luminosité {dans_le_area} à {brightness} pourcent"
  - "règle|régler {le_area} à {brightness} pourcent"
  - "allume[r] {le_area} à {brightness} pourcent"
  
  # Setting brightness per (context awareness)
  - "règle|régler la luminosité à {brightness} pourcent"

  # Setting brightness per floor
  - "règle|régler la luminosité {de_le_floor} à {brightness} pourcent"
  - "règle|régler la luminosité {dans_le_floor} à {brightness} pourcent"
  - "règle|régler {le_floor} à {brightness} pourcent"
  - "allume[r] {le_floor} à {brightness} pourcent"

  # Setting color per area
  - "allume[r] [les|la] lumière[s] {de_le_area} en {color}"
  - "allume[r] [les|la] lumière[s] {dans_le_area} en {color}"
  - "allume[r] {le_area} en {color}"
  - "règle|régler [les|la] lumière[s] {de_le_area} en {color}"
  - "règle|régler [les|la] lumière[s] {dans_le_area} en {color}"
  - "règle|régler {le_area} en {color}"
  
  # Setting color per (context awareness)
  - "allume[r] [les|la] lumière[s] en {color}"
  - "règle|régler [les|la] lumière[s] en {color}"

  # Setting color per floor
  - "allume[r] [les|la] lumière[s] {de_le_floor} en {color}"
  - "allume[r] [les|la] lumière[s] {dans_le_floor} en {color}"
  - "allume[r] {le_floor} en {color}"
  - "règle|régler [les|la] lumière[s] {de_le_floor} en {color}"
  - "règle|régler [les|la] lumière[s] {dans_le_floor} en {color}"
  - "règle|régler {le_floor} en {color}"

  # # lights (name)
  # - sentences:
  #     - "set [the] brightness of [the] {name} to {brightness} percent"
  #     - "set [the] {name} brightness to {brightness} percent"
  #   domains:
  #     - "light"
  #   light_supports_brightness: true

  # - sentences:
  #     - "set [the] [color of [the]] {name} to {color}"
  #     - "set [the] {name} [color] to {color}"
  #   domains:
  #     - "light"
  #   light_supports_color: true

  # # doors and windows
  # - "(open|close) [the] (blinds|curtains|windows) in [the] {area}"
  # - "(open|close) [the] {area} (blinds|curtains|windows)"
  # - sentences:
  #     - "(open|close) [the] {name}"
  #     - "(open|close) [the] {name} in [the] {area}"
  #     - "is [the] {name} (open|closed)"
  #   domains:
  #     - "cover"

  # # locks
  # - sentences:
  #     - "(lock|unlock) [the] {name}"
  #     - "is [the] {name} (locked|unlocked)"
  #   domains:
  #     - "lock"

  # # generic on/off
  # - sentences:
  #     - "turn (on|off) [the] {name}"
  #     - "turn [the] {name} (on|off)"
  #     - "turn (on|off) [the] {name} in [the] {area}"
  #     - "turn [the] {name} in [the] {area} (on|off)"
  #   domains:
  #     - "light"
  #     - "switch"
  #     - "fan"
  #     - "media_player"
  #     - "input_boolean"

  # # scripts and scenes
  # - sentences:
  #     - "run [the] {name} [script]"
  #   domains:
  #     - "script"

  # - sentences:
  #     - "activate [the] {name} [scene]"
  #   domains:
  #     - "scene"

  # # timers
  # - "(set|start|create) [a] timer for {seconds} seconds"
  # - "(set|start|create) [a] timer for 1 minute"
  # - "(set|start|create) [a] timer for {minutes} minutes"
  # - "(set|start|create) [a] timer for 1 minute and {seconds} seconds"
  # - "(set|start|create) [a] timer for {minutes} minutes and {seconds} seconds"
  # - "(set|start|create) [a] timer for {minutes} and a half minutes"
  # - "(set|start|create) [a] timer for 1 hour"
  # - "(set|start|create) [a] timer for {hours} hours"
  # - "(set|start|create) [a] timer for {hours} and a half hours"
  # - "(set|start|create) [a] timer for 1 hour and 1 minute"
  # - "(set|start|create) [a] timer for 1 hour and {minutes} minutes"
  # - "(set|start|create) [a] timer for {hours} hours and {minutes} minutes"

  # - "(cancel|stop) [the|my] timer"
  # - "(cancel|stop) all [[of ](the|my)] timers"
  # - "(pause|resume) [the|my] timer"
  # - "timer status"
  # - "status of [the|my] timer[s]"
  # - "[how much] time [is] left on [the|my] timer[s]"

  # media
  - "(pause|lecture)"
  # - "next [(track|item)]"
  # - "skip [[this ](track|song)]"
  # - sentences:
  #     - "(pause|resume) [the] {name}"
  #     - "next [(track|item)] on [the] {name}"
  #     - "skip [[the ](track|song)] on [the] {name}"
  #   domains:
  #     - "media_player"

  # # temperature
  # - "(what is|what's) the (temp|temperature)"
  # - "(what is|what's) the (temp|temperature) in [the] {area}"
  # - "(what is|what's) the {area} (temp|temperature)"
  # - sentences:
  #     - "(what is|what's) the {name} (temp|temperature)"
  #     - "(what is|what's) the (temp|temperature) of [the] {name}"
  #   domains:
  #     - "climate"

  # # sensors
  # - sentences:
  #     - "what is [the [value of [the]]] {name}"
  #   domains:
  #     - "sensor"
